{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport invariant from 'invariant';\nimport { val } from \"../val\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport InternalAnimatedValue from \"./InternalAnimatedValue\";\nvar AnimatedBlock = function (_AnimatedNode) {\n  _inherits(AnimatedBlock, _AnimatedNode);\n  var _super = _createSuper(AnimatedBlock);\n  function AnimatedBlock(array) {\n    var _this;\n    _classCallCheck(this, AnimatedBlock);\n    invariant(array.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes\");\n    _this = _super.call(this, {\n      type: 'block',\n      block: array\n    }, array);\n    _this._array = array;\n    return _this;\n  }\n  _createClass(AnimatedBlock, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedBlock, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var result;\n      this._array.forEach(function (node) {\n        result = val(node);\n      });\n      return result;\n    }\n  }]);\n  return AnimatedBlock;\n}(AnimatedNode);\nexport function createAnimatedBlock(items) {\n  return adapt(items);\n}\nfunction nodify(v) {\n  if (typeof v === 'object' && v != null && v.__isProxy) {\n    if (!v.__val) {\n      v.__val = new InternalAnimatedValue(0);\n    }\n    return v.__val;\n  }\n  return v instanceof AnimatedNode ? v : InternalAnimatedValue.valueForConstant(v);\n}\nexport function adapt(v) {\n  return Array.isArray(v) ? new AnimatedBlock(v.map(function (node) {\n    return adapt(node);\n  })) : nodify(v);\n}","map":{"version":3,"names":["invariant","val","AnimatedNode","InternalAnimatedValue","AnimatedBlock","array","every","el","type","block","_array","__nodeID","result","forEach","node","createAnimatedBlock","items","adapt","nodify","v","__isProxy","__val","valueForConstant","Array","isArray","map"],"sources":["C:/Users/maria/Desktop/sojoga/sojoga/frontend/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedBlock.js"],"sourcesContent":["import invariant from 'invariant';\r\nimport { val } from '../val';\r\nimport AnimatedNode from './AnimatedNode';\r\nimport InternalAnimatedValue from './InternalAnimatedValue';\r\n\r\nclass AnimatedBlock extends AnimatedNode {\r\n  _array;\r\n\r\n  constructor(array) {\r\n    invariant(\r\n      array.every((el) => el instanceof AnimatedNode),\r\n      `Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`\r\n    );\r\n    super({ type: 'block', block: array }, array);\r\n    this._array = array;\r\n  }\r\n\r\n  toString() {\r\n    return `AnimatedBlock, id: ${this.__nodeID}`;\r\n  }\r\n\r\n  __onEvaluate() {\r\n    let result;\r\n    this._array.forEach((node) => {\r\n      result = val(node);\r\n    });\r\n    return result;\r\n  }\r\n}\r\n\r\nexport function createAnimatedBlock(items) {\r\n  return adapt(items);\r\n}\r\n\r\nfunction nodify(v) {\r\n  if (typeof v === 'object' && v?.__isProxy) {\r\n    if (!v.__val) {\r\n      v.__val = new InternalAnimatedValue(0);\r\n    }\r\n    return v.__val;\r\n  }\r\n  // TODO: cache some typical static values (e.g. 0, 1, -1)\r\n  return v instanceof AnimatedNode\r\n    ? v\r\n    : InternalAnimatedValue.valueForConstant(v);\r\n}\r\n\r\nexport function adapt(v) {\r\n  return Array.isArray(v)\r\n    ? new AnimatedBlock(v.map((node) => adapt(node)))\r\n    : nodify(v);\r\n}\r\n"],"mappings":";;;;;;;AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,SAASC,GAAG;AACZ,OAAOC,YAAY;AACnB,OAAOC,qBAAqB;AAAgC,IAEtDC,aAAa;EAAA;EAAA;EAGjB,uBAAYC,KAAK,EAAE;IAAA;IAAA;IACjBL,SAAS,CACPK,KAAK,CAACC,KAAK,CAAC,UAACC,EAAE;MAAA,OAAKA,EAAE,YAAYL,YAAY;IAAA,EAAC,8IAEhD;IACD,0BAAM;MAAEM,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAEJ;IAAM,CAAC,EAAEA,KAAK;IAC5C,MAAKK,MAAM,GAAGL,KAAK;IAAC;EACtB;EAAC;IAAA;IAAA,OAED,oBAAW;MACT,+BAA6B,IAAI,CAACM,QAAQ;IAC5C;EAAC;IAAA;IAAA,OAED,wBAAe;MACb,IAAIC,MAAM;MACV,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC,UAACC,IAAI,EAAK;QAC5BF,MAAM,GAAGX,GAAG,CAACa,IAAI,CAAC;MACpB,CAAC,CAAC;MACF,OAAOF,MAAM;IACf;EAAC;EAAA;AAAA,EAtByBV,YAAY;AAyBxC,OAAO,SAASa,mBAAmB,CAACC,KAAK,EAAE;EACzC,OAAOC,KAAK,CAACD,KAAK,CAAC;AACrB;AAEA,SAASE,MAAM,CAACC,CAAC,EAAE;EACjB,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,YAADA,CAAC,CAAEC,SAAS,EAAE;IACzC,IAAI,CAACD,CAAC,CAACE,KAAK,EAAE;MACZF,CAAC,CAACE,KAAK,GAAG,IAAIlB,qBAAqB,CAAC,CAAC,CAAC;IACxC;IACA,OAAOgB,CAAC,CAACE,KAAK;EAChB;EAEA,OAAOF,CAAC,YAAYjB,YAAY,GAC5BiB,CAAC,GACDhB,qBAAqB,CAACmB,gBAAgB,CAACH,CAAC,CAAC;AAC/C;AAEA,OAAO,SAASF,KAAK,CAACE,CAAC,EAAE;EACvB,OAAOI,KAAK,CAACC,OAAO,CAACL,CAAC,CAAC,GACnB,IAAIf,aAAa,CAACe,CAAC,CAACM,GAAG,CAAC,UAACX,IAAI;IAAA,OAAKG,KAAK,CAACH,IAAI,CAAC;EAAA,EAAC,CAAC,GAC/CI,MAAM,CAACC,CAAC,CAAC;AACf"},"metadata":{},"sourceType":"module"}