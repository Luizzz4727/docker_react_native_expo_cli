{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport invariant from 'invariant';\nimport { adapt } from \"../core/AnimatedBlock\";\nimport { val } from \"../val\";\nimport AnimatedNode from \"./AnimatedNode\";\nvar AnimatedCond = function (_AnimatedNode) {\n  _inherits(AnimatedCond, _AnimatedNode);\n  var _super = _createSuper(AnimatedCond);\n  function AnimatedCond(condition, ifBlock, elseBlock) {\n    var _this;\n    _classCallCheck(this, AnimatedCond);\n    invariant(condition instanceof AnimatedNode, \"Reanimated: Animated.cond node first argument should be of type AnimatedNode but got \" + condition);\n    invariant(ifBlock instanceof AnimatedNode, \"Reanimated: Animated.cond node second argument should be of type AnimatedNode but got \" + ifBlock);\n    invariant(elseBlock instanceof AnimatedNode || elseBlock === undefined, \"Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got \" + elseBlock);\n    _this = _super.call(this, {\n      type: 'cond',\n      cond: condition,\n      ifBlock: ifBlock,\n      elseBlock: elseBlock\n    }, [condition, ifBlock, elseBlock]);\n    _this._condition = condition;\n    _this._ifBlock = ifBlock;\n    _this._elseBlock = elseBlock;\n    return _this;\n  }\n  _createClass(AnimatedCond, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedCond, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      if (val(this._condition)) {\n        return val(this._ifBlock);\n      } else {\n        return this._elseBlock !== undefined ? val(this._elseBlock) : undefined;\n      }\n    }\n  }]);\n  return AnimatedCond;\n}(AnimatedNode);\nexport function createAnimatedCond(cond, ifBlock, elseBlock) {\n  return new AnimatedCond(adapt(cond), adapt(ifBlock), elseBlock === undefined ? undefined : adapt(elseBlock));\n}","map":{"version":3,"names":["invariant","adapt","val","AnimatedNode","AnimatedCond","condition","ifBlock","elseBlock","undefined","type","cond","_condition","_ifBlock","_elseBlock","__nodeID","createAnimatedCond"],"sources":["C:/Users/maria/Desktop/sojoga/sojoga/frontend/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedCond.js"],"sourcesContent":["import invariant from 'invariant';\r\nimport { adapt } from '../core/AnimatedBlock';\r\nimport { val } from '../val';\r\nimport AnimatedNode from './AnimatedNode';\r\n\r\nclass AnimatedCond extends AnimatedNode {\r\n  _condition;\r\n  _ifBlock;\r\n  _elseBlock;\r\n\r\n  constructor(condition, ifBlock, elseBlock) {\r\n    invariant(\r\n      condition instanceof AnimatedNode,\r\n      `Reanimated: Animated.cond node first argument should be of type AnimatedNode but got ${condition}`\r\n    );\r\n    invariant(\r\n      ifBlock instanceof AnimatedNode,\r\n      `Reanimated: Animated.cond node second argument should be of type AnimatedNode but got ${ifBlock}`\r\n    );\r\n    invariant(\r\n      elseBlock instanceof AnimatedNode || elseBlock === undefined,\r\n      `Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got ${elseBlock}`\r\n    );\r\n    super(\r\n      {\r\n        type: 'cond',\r\n        cond: condition,\r\n        ifBlock,\r\n        elseBlock,\r\n      },\r\n      [condition, ifBlock, elseBlock]\r\n    );\r\n    this._condition = condition;\r\n    this._ifBlock = ifBlock;\r\n    this._elseBlock = elseBlock;\r\n  }\r\n\r\n  toString() {\r\n    return `AnimatedCond, id: ${this.__nodeID}`;\r\n  }\r\n\r\n  __onEvaluate() {\r\n    if (val(this._condition)) {\r\n      return val(this._ifBlock);\r\n    } else {\r\n      return this._elseBlock !== undefined ? val(this._elseBlock) : undefined;\r\n    }\r\n  }\r\n}\r\n\r\nexport function createAnimatedCond(cond, ifBlock, elseBlock) {\r\n  return new AnimatedCond(\r\n    adapt(cond),\r\n    adapt(ifBlock),\r\n    elseBlock === undefined ? undefined : adapt(elseBlock)\r\n  );\r\n}\r\n"],"mappings":";;;;;;;AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,SAASC,KAAK;AACd,SAASC,GAAG;AACZ,OAAOC,YAAY;AAAuB,IAEpCC,YAAY;EAAA;EAAA;EAKhB,sBAAYC,SAAS,EAAEC,OAAO,EAAEC,SAAS,EAAE;IAAA;IAAA;IACzCP,SAAS,CACPK,SAAS,YAAYF,YAAY,4FACuDE,SAAS,CAClG;IACDL,SAAS,CACPM,OAAO,YAAYH,YAAY,6FAC0DG,OAAO,CACjG;IACDN,SAAS,CACPO,SAAS,YAAYJ,YAAY,IAAII,SAAS,KAAKC,SAAS,mHACmDD,SAAS,CACzH;IACD,0BACE;MACEE,IAAI,EAAE,MAAM;MACZC,IAAI,EAAEL,SAAS;MACfC,OAAO,EAAPA,OAAO;MACPC,SAAS,EAATA;IACF,CAAC,EACD,CAACF,SAAS,EAAEC,OAAO,EAAEC,SAAS,CAAC;IAEjC,MAAKI,UAAU,GAAGN,SAAS;IAC3B,MAAKO,QAAQ,GAAGN,OAAO;IACvB,MAAKO,UAAU,GAAGN,SAAS;IAAC;EAC9B;EAAC;IAAA;IAAA,OAED,oBAAW;MACT,8BAA4B,IAAI,CAACO,QAAQ;IAC3C;EAAC;IAAA;IAAA,OAED,wBAAe;MACb,IAAIZ,GAAG,CAAC,IAAI,CAACS,UAAU,CAAC,EAAE;QACxB,OAAOT,GAAG,CAAC,IAAI,CAACU,QAAQ,CAAC;MAC3B,CAAC,MAAM;QACL,OAAO,IAAI,CAACC,UAAU,KAAKL,SAAS,GAAGN,GAAG,CAAC,IAAI,CAACW,UAAU,CAAC,GAAGL,SAAS;MACzE;IACF;EAAC;EAAA;AAAA,EA1CwBL,YAAY;AA6CvC,OAAO,SAASY,kBAAkB,CAACL,IAAI,EAAEJ,OAAO,EAAEC,SAAS,EAAE;EAC3D,OAAO,IAAIH,YAAY,CACrBH,KAAK,CAACS,IAAI,CAAC,EACXT,KAAK,CAACK,OAAO,CAAC,EACdC,SAAS,KAAKC,SAAS,GAAGA,SAAS,GAAGP,KAAK,CAACM,SAAS,CAAC,CACvD;AACH"},"metadata":{},"sourceType":"module"}